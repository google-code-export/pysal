.. role:: strike

*******************
PySAL Documentation
*******************

Writing PySAL Documentation
============================

PySAL project contains two distinct forms of documentation: inline and
non-inline, for lack of a better term. Inline docs are contained in the source
code itself, in *docstrings*.  Non-inline documentation is contained in the
pysal/doc folder, is formatted as Restructured Text (ReST), and generated into
HTML (and other formats) by `Sphinx <http://pypi.python.org/pypi/Sphinx/1.0.7>`_. 


Best Practices
--------------

PySAL makes use of the built-in Sphinx extension *viewcode*. To use it,
your source code module requires at least one properly formatted docstring.

Developers can now strike-through older documentation with a custom directive as
follows.  Near the top of the document, add the role directive.  Then, to strike through old text, add the :strike:
directive and offset the text with back-ticks. This :strike:`strikethrough` is produced
like this::

  .. role:: strike
  This :strike:`strikethrough` is produced like this:




Things to watch out for
------------------------


If you encounter a failing tutorial doctest that does not seem to be in error, it could be 
a difference in whitespace between the expected and received output. In that case, add an 
'options' line as follows::
 
 .. doctest::
    :options: +NORMALIZE_WHITESPACE
	
    >>> print 'a   b   c'
    abc



Building PySAL Documentation
============================
 
PySAL documentation is built using `Sphinx
<http://pypi.python.org/pypi/Sphinx/1.0.7>`_ and the `numpydoc <http://pypi.python.org/pypi/numpydoc/0.4>`_
extension to Sphinx, which formats PySAL's docstrings. You'll need numpydoc version 0.4 or later and Sphinx version 1.0 or later to compile the documentation. 
Both modules are available at the
Python Package Index, and can be downloaded and installed from the command line
using *pip* or *easy_install*.

The source for the docs is in `trunk/doc`. Building the documentation is
done as follows (assuming
sphinx and numpydoc are already installed)::

        serge@think:~/Research/p/PySAL/src/google/trunk/doc$ ls
        build  Makefile  source

        serge@think:~/Research/p/PySAL/src/google/trunk/doc$ make clean;make html


To see the results in a browser open `build/html/index.html`. To make
changes, edit (or add) the relevant files in `source` and rebuild the
docs. Consult the `Sphinx markup guide <http://sphinx.pocoo.org/contents.html>`_ for details on the syntax and structure of the files in `source`.

Once you are happy with your changes, check-in the `source` files. Do not
add or check-in files under  `build` since they are dynamically built.

Changes added to the `svn repository <http://code.google.com/p/pysal/>`_
will be propogated to `pysal.org <http://pysal.org>`_ on an hourly basis.


Issues
======

If you run into the following error::

	Exception occurred:
	 File
	 "/Library/Python/2.6/site-packages/numpydoc-0.3.1-py2.6.egg/numpydoc/numpydoc.py",
	 line 136, in get_directive
	    raise RuntimeError("No directive named '%s' found" % name)
	    RuntimeError: No directive named 'function' found

A fix is to do the following:

    1. From the Python Package Index, upgrade to the latest Sphinx::

        pip install -U sphinx

    2. Upgrade to the latest numpydoc extension from the Python Package Index::

        pip install -U numpydoc


