v<1.4.0>, 2012-07-31

2012-07-26 15:24  schmidtc

	* pysal/core/FileIO.py,
	  pysal/core/Tables.py:
	 Fixing issue #190

2012-07-24 16:32  schmidtc

	* pysal/cg/sphere.py:
	Allowing linear2arcdist function to maintin 'inf', this allows compatability with Scipy's KDTree and addresses issue 208.  

2012-07-24 16:07  schmidtc

	* pysal/cg/locators.py,
	  pysal/core/FileIO.py,
	  pysal/core/Tables.py:
	  Addressing issue 212, renaming nested and private classes to begin with an underscore.  By default sphinx does not try to document private object, which avoids what appears to be a a bug in Sphinx.

2012-07-17 22:06  sjsrey@gmail.com

	* pysal/spreg/probit.py: pedro doc fixes

2012-07-17 15:07  schmidtc

	* pysal/cg/segmentLocator.py,
	  pysal/cg/tests/test_segmentLocator.py: Cleaned up fix for Issue 211

2012-07-13 22:50  sjsrey@gmail.com

	* doc/source/users/tutorials/autocorrelation.txt: fixing sphinx weirdness in footnotes 

2012-07-13 22:37  sjsrey@gmail.com

	* doc/source/users/tutorials/autocorrelation.txt: update for new default parameter values

2012-07-13 22:13  sjsrey@gmail.com

	* pysal/esda/geary.py,
	  pysal/esda/tests/test_geary.py: consistency on transformation and permutation args

2012-07-13 19:59  sjsrey@gmail.com

	* doc/source/users/tutorials/dynamics.txt,
	  pysal/__init__.py,
	  pysal/spatial_dynamics/rank.py: - update user tutorial and __init__

2012-07-13 19:33  sjsrey@gmail.com

	* pysal/spatial_dynamics/rank.py,
	  pysal/spatial_dynamics/tests/test_rank.py: - O(n log n) algorithm for spatial tau (old one was O(n^2)) - closing ticket http://code.google.com/p/pysal/issues/detail?id=83

2012-07-13 17:57  schmidtc

	* pysal/core/IOHandlers/pyDbfIO.py,
	  pysal/core/IOHandlers/tests/test_pyDbfIO.py: Adding better support for writing Null values to DBF.  See issue #193

2012-07-13 15:55  schmidtc

	* pysal/core/util/shapefile.py,
	  pysal/core/util/tests/test_shapefile.py: Cleaning up support for ZM points, polylines and polygons in the shapefile reader. Added unit tests for same.

2012-07-13 15:42  sjsrey@gmail.com

	* doc/source/library/esda/gamma.txt: - update version info 

2012-07-13 15:37  sjsrey@gmail.com

	* doc/source/library/esda/gamma.txt,
	  doc/source/library/esda/index.txt: - adding gamma to api docs

2012-07-13 00:21  sjsrey@gmail.com

	* pysal/esda/gamma.py: optimizations 

2012-07-12 21:28  schmidtc

	* pysal/core/IOHandlers/pyDbfIO.py: Disabling mising value warning for DBF files.  See issue #185

2012-07-12 21:07  schmidtc

	* pysal/cg/segmentLocator.py,
	  pysal/cg/shapes.py,
	  pysal/cg/tests/test_segmentLocator.py,
	  pysal/contrib/spatialnet/spatialnet.py: Adding unittests for segmentLocator (including one that fails see #211). Added VerticalLine class to represent verticle LineSegments. Updated __all__ in segmentLocator. Minor comment formatting in spatialnet.

2012-07-12 19:41  lanselin@gmail.com

	* doc/source/users/tutorials/autocorrelation.txt: tutorial for gamma index

2012-07-12 19:40  lanselin@gmail.com

	* pysal/esda/gamma.py,
	  pysal/esda/tests/test_gamma.py: gamma with generic function

2012-07-12 14:17  sjsrey@gmail.com

	* pysal/__init__.py: - gamma index added

2012-07-12 03:14  lanselin@gmail.com

	* pysal/esda/tests/test_gamma.py: tests for gamma

2012-07-12 03:13  lanselin@gmail.com

	* pysal/esda/gamma.py: gamma index of spatial autocorrelation

2012-07-12 03:11  lanselin@gmail.com

	* pysal/esda/__init__.py: gamma index 

2012-07-11 21:32  lanselin@gmail.com

	* pysal/esda/join_counts.py,
	  pysal/esda/tests/test_join_counts.py: join counts without analytical results, new permutation 

2012-07-11 21:32  lanselin@gmail.com

	* doc/source/users/tutorials/autocorrelation.txt: updated docs for join counts

2012-07-10 21:13  lanselin@gmail.com

	* doc/source/users/tutorials/autocorrelation.txt: docs for join count in autocorrelation

2012-07-10 21:12  lanselin@gmail.com

	* pysal/esda/join_counts.py,
	  pysal/esda/tests/test_join_counts.py: additional test in join counts, docs added

2012-07-10 19:24  lanselin@gmail.com

	* pysal/esda/join_counts.py,
	  pysal/esda/tests/test_join_counts.py: join counts with permutations for BB, updated tests to include permutations

2012-07-09 04:22  sjsrey

	* pysal/weights/weights.py:
	  - fixing bug luc identified with regard to mean_neighbor property.  wrong key name was used in cache dictionary.  

2012-07-07 17:00  sjsrey

	* pysal/__init__.py: update for spreg and contrib inclusion


2012-07-07 16:51  sjsrey

	* pysal/spatial_dynamics/markov.py: - updating doc strings

2012-07-07 16:17  sjsrey

	* pysal/spreg/probit.py:
	  - fixing doc string and refs 

2012-07-06 21:58  dfolch

	* doc/source/library/spreg/probit.txt: txt file to include probit in the HTML docs

2012-07-06 21:11  dfolch

	* pysal/spreg/tests/test_ols_sparse.py: fixing unittest error; still no solution to scientific notation formatting in doctests

2012-07-06 20:24  dfolch

	* pysal/spreg/__init__.py,
	  pysal/spreg/diagnostics.py,
	  pysal/spreg/diagnostics_sp.py,
	  pysal/spreg/diagnostics_tsls.py,
	  pysal/spreg/error_sp.py,
	  pysal/spreg/error_sp_het.py,
	  pysal/spreg/error_sp_hom.py,
	  pysal/spreg/ols.py,
	  pysal/spreg/probit.py,
	  pysal/spreg/robust.py,
	  pysal/spreg/summary_output.py,
	  pysal/spreg/tests/test_diagnostics.py,
	  pysal/spreg/tests/test_diagnostics_sp.py,
	  pysal/spreg/tests/test_diagnostics_tsls.py,
	  pysal/spreg/tests/test_error_sp.py,
	  pysal/spreg/tests/test_error_sp_het.py,
	  pysal/spreg/tests/test_error_sp_het_sparse.py,
	  pysal/spreg/tests/test_error_sp_hom.py,
	  pysal/spreg/tests/test_error_sp_hom_sparse.py,
	  pysal/spreg/tests/test_error_sp_sparse.py,
	  pysal/spreg/tests/test_ols.py,
	  pysal/spreg/tests/test_ols_sparse.py,
	  pysal/spreg/tests/test_probit.py,
	  pysal/spreg/tests/test_twosls.py,
	  pysal/spreg/tests/test_twosls_sp.py,
	  pysal/spreg/tests/test_twosls_sp_sparse.py,
	  pysal/spreg/tests/test_twosls_sparse.py,
	  pysal/spreg/twosls.py,
	  pysal/spreg/twosls_sp.py,
	  pysal/spreg/user_output.py,
	  pysal/spreg/utils.py: -Adding classic probit regression class -Adding spatial diagnostics for probit -Allowing x parameter to be either a numpy array or scipy sparse matrix in all regression classes -Adding additional unit tests -Various refactoring to streamline code base and improve long term maintainability -Contributions from Luc Anselin, Pedro Amaral, Daniel Arribas-Bel, David Folch and Nicholas Malizia

2012-07-03 18:59  sjsrey

	* pysal/spatial_dynamics/markov.py,
	  pysal/spatial_dynamics/tests/test_markov.py: - refactor significant move_types for clarity and fixing a logic bug


2012-06-20 04:50  sjsrey@gmail.com

	* doc/source/developers/docs/index.txt:
	  - added section for how to write a tutorial for new modules 
2012-06-20 02:45  sjsrey

	* doc/source/developers/docs/index.txt:
	  - updating doc building instructions

2012-06-06 18:58  phil.stphns

	* .build-osx10.6-py26.sh,
	  .build-osx10.6-py27.sh:
	  - local modifications for Frameworks builds

2012-06-05 20:56  phil.stphns

	* .build-osx10.6-py26.sh,
	  .build-osx10.6-py27.sh,
	  .build-osx10.7-py27.sh, .runTests.sh:
	  - adding experimental build and test scripts.

2012-06-05 16:43  schmidtc

	* pysal/cg/segmentLocator.py,
	  pysal/cg/shapes.py,
	  pysal/contrib/spatialnet/spatialnet.py:
	  initial snap function for spatialnet

2012-06-05 16:38  schmidtc

	* pysal/core/IOHandlers/pyShpIO.py,
	  pysal/core/util/shapefile.py,
	  pysal/core/util/tests/test_shapefile.py: Adding PolygonZ support to Shapefile IO

2012-05-24 21:57  sjsrey

	* pysal/esda/mapclassify.py: - truncate option for fisher_jenks sampling

2012-05-15 20:08  schmidtc

	* pysal/cg/segmentLocator.py,
	  pysal/cg/shapes.py: Added query to SegmentLocator

2012-05-11 22:17  sjsrey

	* pysal/esda/mapclassify.py: - added Fisher_Jenks_Sampled

2012-05-11 00:45  mhwang4

	* pysal/contrib/network/distances.csv,
	  pysal/contrib/network/simulator.py,
	  pysal/contrib/network/test_lincs.py,
	  pysal/contrib/network/test_weights.py,
	  pysal/contrib/network/weights.py: adding test code for distance-file-based weight generator; updates on simulator 

2012-05-10 22:37  mhwang4

	* pysal/contrib/network/klincs.py,
	  pysal/contrib/network/lincs.py,
	  pysal/contrib/network/test_klincs.py,
	  pysal/contrib/network/test_lincs.py: adding test code for network-constrained lisa

2012-05-10 21:11  mhwang4

	* pysal/contrib/network/crimes.dbf,
	  pysal/contrib/network/crimes.shp,
	  pysal/contrib/network/crimes.shx,
	  pysal/contrib/network/test_klincs.py: test code for local K function

2012-05-08 18:05  mhwang4

	* pysal/contrib/network/streets.dbf,
	  pysal/contrib/network/streets.shp,
	  pysal/contrib/network/streets.shx,
	  pysal/contrib/network/test_network.py: adding a test data set

2012-05-08 16:34  schmidtc

	* pysal/cg/segmentLocator.py,
	  pysal/cg/shapes.py,
	  pysal/core/FileIO.py: Adding start of segmentLocator, adding minimal slicing support to FileIO


2012-05-03 17:03  schmidtc

	* pysal/cg/shapes.py,
	  pysal/cg/tests/test_shapes.py: Adding solve for x support to Line. Cleaning up LineSegment's Line method.

2012-04-20 17:48  schmidtc

	* pysal/cg/shapes.py: adding arclen method to Chain object.

2012-04-19 16:37  dfolch

	* pysal/weights/Distance.py: reducing number of distance queries in Kernel from n^2 to n

2012-04-17 21:20  schmidtc

	* pysal/contrib/spatialnet/spatialnet.py: adding distance

2012-04-17 19:46  schmidtc

	* pysal/contrib/spatialnet/cleanNetShp.py,
	  pysal/contrib/spatialnet/spatialnet.py: Adding FNODE/TNODE to dbf when cleaning shapefiles. Added util function createSpatialNetworkShapefile Added SpatialNetwork class

2012-04-17 15:32  schmidtc

	* pysal/contrib/weights_viewer/weights_viewer.py: "revert back to the background when the point is outside of any unit" - request from serge

2012-04-11 02:50  schmidtc

	* pysal/cg/kdtree.py: Fixing user submitted bug,issue #206.

2012-04-10 22:00  dreamessence

	* pysal/weights/Wsets.py: Including w_clip in __all__

2012-04-10 21:58  dreamessence

	* pysal/weights/Wsets.py: Adding w_clip method to clip W matrices (sparse and/or pysal.W) with a second (binary) matrix

2012-04-10 21:57  schmidtc

	* pysal/contrib/spatialnet/beth_roads.shp,
	  pysal/contrib/spatialnet/beth_roads.shx,
	  pysal/contrib/spatialnet/cleanNetShp.py: Adding network shapefile cleaning tools and temporary sample data.  

2012-04-10 21:48  sjsrey

	* pysal/contrib/spatialnet/util.py: - more stubs for util mod

2012-04-10 19:58  sjsrey

	* pysal/contrib/spatialnet/util.py: - start of util module

2012-04-03 20:43  sjsrey

	* pysal/contrib/spatialnet: - new contrib module - integrate geodanet functional (move over from network) - wrap networkx

2012-04-03 01:21  schmidtc

	* pysal/cg/rtree.py: Adding pickle support to RTree


2012-03-28 23:27  mhwang4 
	* pysal/contrib/network/kernel.py,
	  pysal/contrib/network/kfuncs.py,
	  pysal/contrib/network/test_access.py,
	  pysal/contrib/network/test_kernel.py,
	  pysal/contrib/network/test_kfuncs.py,
	  pysal/contrib/network/test_network.py: adding examples for network-related modules

2012-03-19 15:33  schmidtc

	* pysal/core/IOHandlers/pyDbfIO.py: Adding support for writing Null dates

2012-03-14 21:04  phil.stphns

	* doc/source/developers/testing.txt,
	  doc/source/users/installation.txt: Small changes to user install instructions to highlight the ease with which pysal can be installed ;-> And, developer instructions for running the test suite from within a session if desired.

2012-03-03 00:00  phil.stphns

	* pysal/spatial_dynamics/markov.py: Potential source of dev docs pngmath latex fail.

2012-02-24 23:29  mhwang4

	* pysal/contrib/network/network.py: fixing bug in network.py

2012-02-20 19:50  phil.stphns

	* doc/source/developers/py3k.txt: Developer doc to explain setting up PySAL for Python3.

2012-02-20 16:18  schmidtc

	* pysal/esda/__init__.py: removing invalid __all__ from esda's init.  See #194

2012-02-16 23:15  phil.stphns

	* pysal/__init__.py,
	  pysal/core/util/shapefile.py: Minor changes to imports that cause py3tool to stumble.

2012-02-15 23:16  phil.stphns

	* doc/source/developers/py3k.txt,
	  doc/source/users/installation.txt: Modified links in user installation instructions.  Added more steps for developers setting up Python3 dev environments on OSX.

2012-02-14 21:55  schmidtc

	* pysal/esda/getisord.py: fixing side effect caused when changing the shape of y, creating a new view with reshape instead.

2012-02-14 21:21  schmidtc

	* pysal/esda/getisord.py: optimizing G_Local

2012-02-14 20:37  schmidtc

	* pysal/esda/getisord.py: optimizing G

2012-02-14 00:21  phil.stphns

	* doc/source/developers/index.txt,
	  doc/source/developers/py3k.txt,
	  doc/source/developers/release.txt: Adding early docs on Python 3 support. Modifying release instructions.

v<1.3.0>, 2012-01-31

    * core/IOHandlers/pyDbfIO.py: Addressing issue #186

    * cg/shapes.py: fixing small bug in polygon constructor that causes
      an exception when an empty list is passed in for the holes.

    * cg/standalone.py: removing standalone centroid method. see issue
      #138.

    * esda/mapclassify.py, esda/tests/test_mapclassify.py: - new
      implementation of fisher jenks

    * spreg/__init__.py, spreg/diagnostics_sp.py,
      spreg/diagnostics_tsls.py, spreg/error_sp.py,
      spreg/error_sp_het.py, spreg/error_sp_hom.py, spreg/ols.py,
      spreg/robust.py, spreg/tests, spreg/twosls.py,
      spreg/twosls_sp.py, spreg/user_output.py, spreg/utils.py: Adding
      the following non-spatial/spatial regression modules:
      * Two Stage Least Squares
      * Spatial Two Stage Least Squares
      * GM Error (KP 98-99)
      * GM Error Homoskedasticity (Drukker et. al, 2010)
      * GM Error Heteroskedasticity (Arraiz et. al, 2010)
      * Anselin-Kelejian test for residual spatial autocorrelation of
      residuals from IV regression
      
      Adding also utility functions and other helper classes.
      
    * cg/standalone.py: slight improvment to get_shared_segments, in
      part to make it more readable.

    * cg/shapes.py, cg/tests/test_standalone.py: adding <,<=,>,>= tests
      to Point, this fixes a bug in the get_shared_segments function
      that was causing some LineSegments to be incorectly ordered
      because the default memory address was being used instead of the
      points location.

    * core/IOHandlers/tests/test_wkt.py, core/IOHandlers/wkt.py,
      core/util/tests/test_wkt.py, core/util/wkt.py,
      weights/tests/test_Distance.py, weights/tests/test_user.py,
      weights/user.py: Fixing small numerical errors n testing that
      resulted from changing the centroid algorithm.

    * esda/moran.py: another optimization for __crand see issue #188

    * weights/util.py: Added option for row-standardized SW in lat2SW.
      Implementing suggestion from Charlie in Issue 181 from
      StackOverflow

    * esda/moran.py: another optimization to __crand, see issue #188
      for details.

    * esda/moran.py: Optimized __crand in Local_Moran

    * cg/shapes.py, cg/standalone.py, contrib/shapely_ext.py:
      Adddressing issue #138, centroids for polygons with holes
      Fixing some issues with the shapely wrapper and out implemenation
      of __geo_interface__

    * weights/Distance.py: previous 'fix' to uniform kernel did not
      have correct dimensions

    * core/IOHandlers/arcgis_txt.py, core/IOHandlers/dat.py,
      weights/user.py: fixing rounding errors with docstrings

    * contrib/README, contrib/shared_perimeter_weights.py: Adding
      shared perimeter weights, see Issue #46

    * contrib/README, contrib/shapely_ext.py: moving shapely_ext into
      contrib

    * core/IOHandlers/pyDbfIO.py: Fixing issue with scientific notation
      is DBF files. #182

    * core/IOHandlers/pyShpIO.py: clockwise testing should only be
      performed on Polygons. #183

    * spreg/diagnostics_sp.py: Switching ints to floats in variance of
      Morans I for residuals to get correct results

    * core/util/shapefile.py, examples/__init__.py: Add a "get_path"
      function to examples module.
      pysal.examples.get_path('stl_hom.shp') will always return the
      correct system path to stl_hom.shp, no matter where it's run
      from. This is useful for testing.
      Modified shapefile tests to use the new function.

    * spreg/diagnostics.py: Adding check on condition_index to pick OLS
      (xtx) or IV (hth) model

    * core/IOHandlers/template.py: Updating template to pass unit
      testing.

    * core/util/shapefile.py: Fixing issue #180. Making shapefile
      opener case insensitive.

    * spatial_dynamics/interaction.py,
      spatial_dynamics/tests/test_interaction.py: Adding modified Knox
      and changes to existing tests in spatial_dynamics.

    * core/IOHandlers/arcgis_txt.py,
      core/IOHandlers/tests/test_arcgis_txt.py: fixing arcgis_txt.py so
      that it ignores self-neighbors with zero weights

    * core/FileIO.py: Updating library README.
      Removing docstrings from FileIO module.

    * contrib/README: adding contrib to installer and adding initial
      README

    * core/IOHandlers/gwt.py: rewrote GWT reader to avoid list appends.
      resulted in speed up of about 12x.

    * core/IOHandlers/pyDbfIO.py: implementing _get_col for dbf files.

    * core/IOHandlers/gwt.py: Adding a small fix to gwt reader, if the
      ids cannot be found in the associated DBF, they will be read in
      order from the GWT file.

    * contrib/weights_viewer/weights_viewer.py: Small change to
      identify polygons that are their own neighbor.

    * weights/Distance.py: removing incorrect kernel functions and
      fixing bug in uniform kernel

    * weights/util.py: refactoring insert_diagonal so that it can add
      or overwrite the diagonal weights

    * contrib, contrib/README, contrib/__init__.py,
      contrib/weights_viewer, contrib/weights_viewer/__init__.py,
      contrib/weights_viewer/transforms.py,
      contrib/weights_viewer/weights_viewer.py: Adding 1st contrib, a
      wxPython based Weights file viewer.


    * spatial_dynamics/markov.py: - handle case of zero transitions in
      spatial markov, consistent with treatment
      in classic markov

    * core/FileIO.py, core/IOHandlers/pyShpIO.py: Changes to allow
      reading of null polygons.

    * core/util/shapefile.py, core/util/tests/test_shapefile.py:
      refactoring shapefile reader, see issue #89

    * core/FileIO.py: small change to FileIO to allow FileFormat
      argument to be passed through

    * esda/getisord.py: fixing bug in local Z values for integer data

    * cg/__init__.py, weights/user.py, weights/util.py: adding radius
      option to user weights methods

    * cg/kdtree.py, common.py, weights/Distance.py,
      weights/tests/test_Distance.py: Distance weights can not be
      passed an instnace of KDTree instead of an array. If the KDTree
      is of type ArcKDTree, the weights returns will be based on
      ArcDistances. Adding tests for Arc cases off KNN and
      DistanceBand.

    * weights/util.py: - added function for local clustering
      coefficient - summary for W as a graph

    * cg/kdtree.py, cg/sphere.py: finishing up Arc_KDTree

    * weights/Distance.py: More doctest fixes.

    * region/maxp.py, spreg/diagnostics.py, weights/Distance.py,
      weights/user.py: Fixing the doctests for dusty python setup.

    * cg/kdtree.py, cg/sphere.py: adding spherical wrapper around scipy
      kdtree

    * cg/__init__.py, cg/sphere.py: Adding spherical distance tools to
      cg. Related to issue #168

    * core/IOHandlers/gwt.py, core/IOHandlers/tests/test_gwt.py:
      re-enabled gwt writing.
      'o' transform is used on all GWTs for writing (w is returned to
      existing transform on exit)
      Also, setting '_shpName' and '_varName' attributes on W's which
      are read in through gwt.
      the writer will check if these vars exist and use them for the
      header, this prevents metadata loss on simple copies

    * esda/join_counts.py: - fix for handling int array type

    * spreg/diagnostics.py: Adding more efficient constant check for
      spreg.

    * cg/shapes.py: adding __geo_interface__ and asShape adapter for
      Point, LineString and Polygon

    * spreg/diagnostics.py: minor change to t-stat function to
      accommodate future regression models

    * esda/mapclassify.py: - more general fix for #166


v<1.2.0>, 2011-07-31

    * pysal/spreg/user_output.py: Fix for bug 162

    * pysal/spatial_dynamics/markov.py: Added markov mobility measures; addresses issue 137

    * pysal/weights/weights.py: Partially addressed issue 160 by removing the shimbel, order, and higher_order methods from W. 

    * doc/source/users/installation.txt: Adding known issue regarding GNU/Linux testing and random seeds; see ticket 52.

    * pysal/esda/geary.py: Adding sparse implementation of Geary's C; substantial gains on larger datasets. 

    * pysal/core/IOHandlers/mtx.py: Adding WSP2W function for fast conversion of sparse weights object (WSP) to pysal W.

    * pysal/esda/getisord.py: Adding Getis-Ord G test module

    * pysal/weights/util.py: Added function that inserts values along the main diagonal of a weights object

    * doc/source/users/tutorials: Fixed issue 76.

    * pysal/core/IOHandlers/mtx.py: Added an IOHandler for MatrixMarket MTX files

    * pysal/esda/moran.py: Optimized conditional randomization

    * pysal/weights/util.py: Re-adding full2W() method to convert full arrays into W objects; related to issue #136. 

    * pysal/core/IOHandlers/gal.py: Added sparse WSP (thin W); gal reader can return W or WSP

    * pysal/core/IOHandlers/pyDbfIO.py: Bug Fix, DBF files are not properly closed when opened in 'r' mode. See issue #155.

    * pysal/core/IOHandlers/stata_txt.py: Adding FileIO handlers for STATA text files

    * pysal/weights/user.py: Fixed issue #154, adding k option to User Kernel weights functions.

    * pysal/core/IOHandlers/mat.py: Adding an IOHandler for MATLAB mat file

    * pysal/core/IOHandlers/wk1.py: Adding an IO handler for wk1 file

    * pysal/core/IOHandlers/geobugs_txt.py: Adding an IO handler for geobugs text file.

    * pysal/core/IOHandlers/arcgis_swm.py: Added ArcGIS SWM file handler

    * pysal/core/IOHandlers/arcgis_dbf.py: Adding a spatial weights file in the (ArcGIS-style) DBF format. 

    * pysal/core/IOHandlers/arcgis_txt.py: Added ArcGIS ASCII file IO handler. 

    * pysal/core/IOHandlers/dat.py: Added DAT file handler.

    * pysal/cg/locators.py: Added point in polygon method for Polygon and PolygonLocator

    * pysal/weights/Distance.py: Optimized Kernel() method to run much faster for the case of adaptive bandwidths

    * pysal/weights/user.py: Added helper function in user.py to create scipy sparse matrix from a gal file

    * pysal/common.py: Added shallow copy method to Read-Only Dict to support multiprocessing.

    * pysal/spatial_dynamics/rank.py: More efficient regime weights

    * pysal/weights/Distance.py: Adding epanechnikov and bisquare kernel funtions

    * pysal/core/IOHandlers/pyDbfIO.py: Adding NULL support to numerical DBF fields; modifying PointLocator API to match PolygonLocator API 

    * pysal/cg/locators.py: Handles case when query rectangle is completely inside a polygon

    * pysal/cg/locators.py: Explicit polygon overlap hit test

    * pysal/cg/standalone.py: Adding point-polygon intersection support for polygons with holes.

    * pysal/spatial_dynamics/markov.py: Added homogeneity test.

    * pysal/spatial_dynamics/markov.py: Added spillover test in LISA_Markov.

    * pysal/cg/locators.py: Added Rtree based spatial index for polygonlocator.

    * pysal/cg/rtree.py: Added pure python Rtree module.

    * doc/source/developers/pep/pep-0010.txt: Added PEP 0010: Rtree module in pure python.

    * pysal/esda/geary.py: Fixed bug 144.

    * pysal/spatial_dynamics/markov.py: Added significance filtering of LISA markov.

    * doc/source/developers/pep/pep-0009.txt: Added new PEP, "PEP 0009: Add Python 3.x Support."

    * doc/source/developers/guidelines.txt: New release cycle schedules for 1.2 and 1.3.

    * doc/source/developers/release.txt: Updated pypi instructions; PySAL available on the Python Package Index via download, easy_install, and pip. 

v<1.1.0>, 2011-01-31

    * pysal/core/FileIO.py, pysal/core/IOHandlers/pyDbfIO.py: Added missing value support to FileIO. Warnings will be issued when missing values are found and the value will be set to pysal.MISSINGVALUE, currently None, but the user can change it as needed.

    * pysal/spreg/: Added Spatial Regression module, spreg, and tests.  Added non-spatial diagnostic tests for OLS regression. 

    * pysal/core/IOHandlers/gwt.py: Fixing bottle neck in gwt reader, adding support for GeoDa Style ID's and DBF id_order.

    * pysal/cg/standalone.py: adding, distance_matrix, full distance matrix calculation using sparse matrices

    * pysal/core/util: Moved "converters" into core.util, allows them to be used independently of FileIO.

    * pysal/weights/Distance.py: Adding work around for bug in scipy spatial, see pysal issue #126

    * pysal/weights/user.py: Added build_lattice_shapefile in weights.user, which writes an ncol by nrow grid to a shapefile.

    * pysal/weights/Distance.py: fixed coincident point problem in knnW and made sure it returns k neighbors 
    * pysal/spatial_dynamics/interaction.py: Added a suite of spatio-temporal interaction tests including the Knox, Mantel, and Jacquez tests. 

    * pysal/weights/util.py: Added lat2SW, allows to create a sparse W matrix for a regular lattice.

    * pysal/tests/tests.py: - new 1.1 integration testing scheme.

    * pysal/esda/interaction.py: added standardized Mantel test and improved readability.

    * pysal/spatial_dynamics/directional.py: - adding directional LISA analytics

    * pysal/esda/mapclassify.py: Natural_Breaks will lower k for data with fewer than k unique values, prints warning.

    * pysal/region/randomregion.py: improvements to spatially constrained random region algorithm

    * pysal/esda/smoothing.py: Adding choynowski probabilities and SMR to smoothing.py

    * doc/source/developers/release.txt: - updating release cycle - release management

v<1.0.0>, 2010-07-31 -- Initial release.
